---
- name: Verify
  hosts: all
  tasks:
    - name: Stat all dotfiles created
      stat:
        path: "/home/tryme/.{{ item }}"
      with_items:
        - bash_colors
        - bash_gitprompt
        - bash_profile
        - gitk
        - screenrc
        - bashrc
        - gitconfig
      register: check_dotfiles

    - name: "explicitly fail if dotfile doesn't exist"
      fail:
        msg: "{{ item.stat.path }} does not exist, but should"
      with_items: "{{ check_dotfiles.results }}"
      when: not item.stat.exists or item.stat.pw_name != 'tryme' or item.stat.gr_name != 'tryme'

    - name: Stat all backup exclude files
      stat:
        path: "/home/tryme/configs/backups/{{ item }}"
      with_items:
        - excludeHome
      register: check_backups

    - name: "explicitly fail if backups file doesn't exist"
      fail:
        msg: "{{ item.stat.path }} does not exist, but should"
      with_items: "{{ check_backups.results }}"
      when: not item.stat.exists or item.stat.pw_name != 'tryme' or item.stat.gr_name != 'tryme'

    - name: Stat all scripts files
      stat:
        path: "/home/tryme/configs/scripts/{{ item }}"
      with_items:
        - genSHA512passHash
      register: check_scripts

    - name: "explicitly fail if scripts file doesn't exist"
      fail:
        msg: "{{ item.stat.path }} does not exist, but should"
      with_items: "{{ check_scripts.results }}"
      when: not item.stat.exists or item.stat.pw_name != 'tryme' or item.stat.gr_name != 'tryme'

- name: Verify Go
  hosts: golang
  tasks:
    - name: "explicitly source /home/tryme/.bashrc"
      shell: source /etc/profile && source /home/tryme/.bashrc && ls /home/tryme/workspace-go
      args:
        executable: /bin/bash
        creates: /home/tryme/workspace-go
      become: true
      become_user: tryme

    - name: "See if /home/tryme/workspace-go gets created"
      stat:
        path: "/home/tryme/workspace-go/bin"
      become: true
      become_user: tryme
      register: st

    - name: "explicitly fail if dir doesn't exist"
      fail:
        msg: "/home/bin/tryme/workspace-go/bin does not exist, but should"
      when: st.stat.isdir is not defined

    - name: "explicitly fail if link isn't a dir"
      fail:
        msg: "/home/bin/tryme/workspace-go/bin is not a dir, but should be"
      when: st.stat.isdir is defined and not st.stat.isdir|bool
